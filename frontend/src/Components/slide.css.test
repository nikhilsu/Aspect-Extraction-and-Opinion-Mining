
.float {
    transform: scale(.8) translate(-50px,-26px)!important
}

#g-map {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0
}

.input-group {
    margin: 16px 0 14px
}

.fade-enter-active,.fade-leave-active {
    transition: opacity .2s
}

.fade-enter,.fade-leave-to {
    opacity: 0
}

#result {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 4;
    width: 600px;
    transform: translateZ()
}

#result h1 {
    font-family: Roboto Condensed,sans-serif;
    font-weight: 700;
    color: rgba(0,0,0,.7);
    font-size: 48px;
    margin-top: 16px;
    margin-bottom: 22px
}

#result .scroll-box {
    border-top: 1px solid hsla(0,0%,83%,.6);
    border-top-left-radius: 8px;
    overflow-y: auto;
    padding-left: 2px;
    padding-top: 25px;
    padding-bottom: 240px;
    margin-top: -10px;
    position: absolute;
    z-index: 2;
    width: calc(100% + 30px);
    margin-left: -25px
}

#result .scroll-box:before {
    content: "";
    position: fixed;
    width: 80%;
    height: 4px;
    z-index: 2;
    transform: translateY(-32px);
    box-shadow: 0 1px 3px 0 rgba(60,64,67,.302),0 4px 8px 3px rgba(60,64,67,.149);
    opacity: 0;
    transition: .15s ease;
}

#result .scroll-box.shadow:before {
    opacity: 1
}

.slide-down-fade-enter-active {
    transition: all .5s ease
}

.slide-down-fade-leave-active {
    transition: all .8s cubic-bezier(1,.5,.8,1)
}

.slide-down-fade-enter,.slide-down-fade-leave-to {
    transform: translateY(-100px);
    opacity: 0
}

.slide-up-fade-enter-active {
    transition: all .7s ease
}

.slide-up-fade-leave-active {
    transition: all .2s cubic-bezier(1,.5,.8,1)
}

.slide-up-fade-enter {
    transform: translateY(1000px);
    opacity: 0
}

.slide-up-fade-leave-to {
    transform: translateY(-1000px);
    opacity: 0
}

#doughnut-chart {
    width: 100%!important;
    height: 200px!important;
    margin-top: -8px
}

::-webkit-scrollbar-track {
    background: transparent
}

#result-card {
    width: 90%;
    background: #fff;
    padding: 0 30px 26px;
    border: 1px solid #d3d3d3;
    border-radius: 8px;
    box-shadow: 0 1px 2px 0 rgba(60,64,67,.302),0 1px 3px 1px rgba(60,64,67,.149);
    margin-top: 0;
    margin-bottom: 18px;
    margin-left: 25px
}

#result-card h1 {
    font-size: 18px;
    font-family: Roboto Condensed,sans-serif;
    color: rgba(0,0,0,.7);
    margin-top: 26px
}

#similar-cities {
    margin-top: -16px;
    padding-left: 4px
}

#similar-city {
    display: inline-block;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
    border: 1px solid #d3d3d3;
    border-radius: 8px;
    padding: 6px 24px 12px 20px;
    margin-top: 14px;
    margin-right: 18px;
    cursor: pointer;
    transition: .15s ease
}

#similar-city h1 {
    font-family: Roboto Condensed,sans-serif;
    color: rgba(0,0,0,.7);
    font-size: 18px;
    line-height: 18px;
    margin-top: 14px
}

#similar-city h2 {
    font-family: Cabin,sans-serif;
    color: rgba(0,0,0,.54);
    font-size: 14px;
    line-height: 0;
    margin-top: -8px
}

#similar-city:hover {
    box-shadow: 0 1px 2px 0 rgba(60,64,67,.302),0 1px 3px 1px rgba(60,64,67,.149)
}

#similar-city:active {
    box-shadow: 0 1px 3px 0 rgba(60,64,67,.302),0 4px 8px 3px rgba(60,64,67,.149)
}

#population {
    margin-top: -10px;
    padding-left: 26px;
    margin-bottom: -20px
}

#population h1 {
    color: rgba(0,0,0,.7);
    font-size: 32px
}

#population .sub {
    font-size: 18px;
    color: rgba(0,0,0,.54);
    padding-left: 10px
}

#economics {
    margin-top: -22px;
    margin-bottom: -8px
}

#economics .third {
    width: 33%;
    padding-left: 6px;
    display: inline-block
}

#economics h1 {
    color: rgba(0,0,0,.7);
    font-size: 32px;
    text-align: center
}

#economics h2 {
    margin-top: -14px;
    text-align: center
}

#economics .sub {
    font-size: 18px;
    color: rgba(0,0,0,.54);
    padding-left: 6px
}



<template>
  <div id="result">

    <transition name="slide-down-fade">
      <h1 v-if="show">{{ place.name.slice(0,-5).replace(/[0-9]/g, '') }}&nbsp; <span class="tertiary-font-color" style="">{{ place.zip }}</span></h1>
    </transition>

    <div class="scroll-box"
      :class="{'scroll-box': true, 'shadow': showShadow}"
      :style="height"
      v-if="show"
      v-on:scroll="scrollFunc"
      ref="scrollbox"
    >
      <!-- Result Cards for city stats-->
      <transition name="slide-up-fade">
        <result-card v-if="loadFirst" name="Similar Cities" :key="triggerTransition">
          <SimilarCities :cities="cities"></SimilarCities>
        </result-card>
      </transition>

      <transition name="slide-up-fade">
        <result-card v-if="loadSecond" name="Economy" :key="triggerTransition">
          <economics
            :income="stats.averageincome"
            :unemployment="stats.unemployment"
            :rent="stats.medianrent"
          ></economics>
        </result-card>
      </transition>

      <transition name="slide-up-fade">
        <result-card v-if="loadThird" name="Population" :key="triggerTransition">
          <population :population="stats.population"></population>
        </result-card>
      </transition>

      <transition name="slide-up-fade">
        <result-card v-if="loadFourth" name="Gender" :key="triggerTransition">
          <sex-demographics
            :malePercentage="stats.malePercentage"
            :femalePercentage="stats.femalePercentage">
          </sex-demographics>
        </result-card>
      </transition>


      <transition name="slide-up-fade">
        <result-card v-if="loadFifth" name="Education" :key="triggerTransition">
          <education-demographics
            :noHighSchool='stats.noHighSchool'
            :highSchoolNoDiploma='stats.highSchoolNoDiploma'
            :highSchoolGraduate='stats.highSchoolGraduate'
            :someCollegeNoDegree='stats.someCollegeNoDegree'
            :associatesDegree='stats.associatesDegree'
            :bachelorsDegree='stats.bachelorsDegree'
            :graduateDegree='stats.graduateDegree'>
          </education-demographics>
        </result-card>
      </transition>

      <transition name="slide-up-fade">
        <result-card v-if="loadFifth" name="Age" :key="triggerTransition">
          <age-demographics
            :lessThanTen="stats.lessThanTen"
            :tenToNineteen="stats.tenToNineteen"
            :twentyToTwentynine="stats.twentyToTwentynine"
            :thirtyToThirtynine="stats.thirtyToThirtynine"
            :fourtyToFourtynine="stats.fourtyToFourtynine"
            :fiftyToFiftynine="stats.fiftyToFiftynine"
            :sixtyToSixtynine="stats.sixtyToSixtynine"
            :seventyToSeventynine="stats.seventyToSeventynine"
            :eightyAndUp="stats.eightyAndUp">
          </age-demographics>
        </result-card>
      </transition>


      <transition name="slide-up-fade">
        <result-card v-if="loadFifth" name="Race" :key="triggerTransition">
          <racial-demographics
            :whitePercentage="stats.whitePercentage"
            :blackPercentage="stats.blackPercentage"
            :nativeAmericanPercentage="stats.nativeAmericanPercentage"
            :asianPercentage="stats.asianPercentage"
            :pacificIslanderPercentage="stats.pacificIslanderPercentage"
            :otherPercentage="stats.otherPercentage"
            :twoOrMoreRacePercentage="stats.twoOrMoreRacePercentage">
          </racial-demographics>
        </result-card>
      </transition>

      <transition name="slide-up-fade">
        <result-card v-if="loadFifth" name="Geography" :key="triggerTransition">
          <geographic-demographics
            :urbanPopulation="stats.urbanPopulation"
            :ruralPopulation="stats.ruralPopulation">
          </geographic-demographics>
        </result-card>
      </transition>
    </div>
  </div>
</template>

<script>
import ResultCard from './result-cards/ResultCard.vue'
import SimilarCities from './result-cards/SimilarCities.vue'
import Population from './result-cards/Population.vue'
import Economics from './result-cards/Economics.vue'
import RacialDemographics from './result-cards/RacialDemographics.vue'
import SexDemographics from './result-cards/SexDemographics.vue'
import AgeDemographics from './result-cards/AgeDemographics.vue'
import GeographicDemographics from './result-cards/GeographicDemographics.vue'
import EducationDemographics from './result-cards/EducationDemographics.vue'

import axios from 'axios'

export default {
  name: 'Results',

  props: ['place', 'show'],

  components: {
    ResultCard,
    SimilarCities,
    Population,
    Economics,
    RacialDemographics,
    SexDemographics,
    AgeDemographics,
    GeographicDemographics,
    EducationDemographics,
    axios
  },

  mounted () {
    console.log(this.cities);
  },

  methods: {
    upateCities (place) {
      axios.get('/api/search', {
        params: {city: place.zip}
      })
        .then(res => {
          console.log(res.data.data);
          console.log(this.similarCities);
          this.cities = res.data.data.similarCities;
          this.state = res.data.data.stats;
          console.log(this.similarCities);
        })
        .catch(err => {
          console.log(err);
        })

    },

    scrollFunc() {
      //console.log(this.$refs.scrollbox);
      if (this.$refs.scrollbox.scrollTop !== 0) {
        this.showShadow = true;
      }
      else {
        this.showShadow = false;
      }
    },

    loadWaterfall () {
      setTimeout(() => {
        this.$data.loadFirst = true;
        setTimeout(() => {
          this.$data.loadSecond = true;
          setTimeout(() => {
            this.$data.loadThird = true;
            setTimeout(() => {
              this.$data.loadFourth = true;
              setTimeout(() => {
                this.$data.loadFifth = true;
              }, 100);
            }, 100);
          }, 100);
        }, 100);
      }, 20);
    }
  },

  watch: {
    place: function (newPlace, oldPlace) {
      this.loadFirst = false;
      this.loadSecond = false;
      this.loadThird = false;
      this.loadFourth = false;
      this.loadFifth= false;
      this.place = newPlace;
      axios.get('/api/search', {
        params: {city: this.place.zip}
      })
        .then(res => {
          this.$data.stats = res.data.data.stats;
          this.$data.cities = res.data.data.similarCities;
          //this.$data.triggerTransition = !this.$data.triggerTransition;
          this.loadWaterfall();
        })
        .catch(err => {
          console.log(err);
        });
    },

    show: function (newShow, oldShow) {
      if (newShow && !oldShow) {

      }
    }
  },

  data () {
    return {
      stats: {},
      cities: [],
      loadFirst: false,
      loadSecond: false,
      loadThird: false,
      loadFourth: false,
      loadFifth: false,
      height: 'height:' + (window.innerHeight + 103) + 'px',
      showShadow: false,
      triggerTransition: false
    }
  }
}

</script>

<style lang="scss">
@import "../assets/css/style_settings.scss";

#result {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 4;
  width: 600px;
  transform: translateZ();

  h1 {
      font-family: $title-font;
      font-weight: $title-font-weight;
      color: $secondary-font-color;
      font-size: 48px;
      margin-top: 16px;
      margin-bottom: 22px;
  }

  .scroll-box {
    border-top: 1px solid rgba(211,211,211,0.6);
    border-top-left-radius: 8px;
    overflow-y: auto;
    padding-left: 2px;
    padding-top: 25px;
    padding-bottom: 240px;
    margin-top: -10px;
    position: absolute;
    z-index: 2;
    width: calc(100% + 30px);
    margin-left: -25px;
  }
  .scroll-box::before {
    content: "";
    position: fixed;
    width: 80%;
    height: 4px;
    //background: green;
    z-index: 2;
    transform:translateY(-32px);
    box-shadow: $secondary-box-shadow;
    opacity: 0;
    transition: 0.15s ease;
  }
  .scroll-box.shadow::before {
    opacity: 1;
  }
  .scroll-box.shadow {
    //border-color: $border-color;
  }
}


.slide-down-fade-enter-active {
  transition: all .5s ease;
}
.slide-down-fade-leave-active {
  transition: all .8s cubic-bezier(1.0, 0.5, 0.8, 1.0);
}
.slide-down-fade-enter, .slide-down-fade-leave-to
/* .slide-fade-leave-active below version 2.1.8 */ {
  transform: translateY(-100px);
  opacity: 0;
}

.slide-up-fade-enter-active {
  transition: all .7s ease;
}
.slide-up-fade-leave-active {
  transition: all 0.2s cubic-bezier(1.0, 0.5, 0.8, 1.0);
}
.slide-up-fade-enter
/* .slide-fade-leave-active below version 2.1.8 */ {
  transform: translateY(1000px);
  opacity: 0;
}
.slide-up-fade-leave-to {
  transform: translateY(-1000px);
  opacity: 0;
}

#doughnut-chart {
  width: 100% !important;
  height: 200px !important;
  margin-top: -8px;
}

::-webkit-scrollbar-track {
    background: transparent;
}
</style>



// WEBPACK FOOTER //
// src/components/Result.vue